---
description:
globs:
alwaysApply: false
---
# Development Workflow Guide

## Building and Testing
The project uses Make for build automation. Common tasks are defined in the [Makefile](mdc:Makefile):

```bash
make        # Build the project
make test   # Run tests
make bench  # Run benchmarks
make deps   # Install dependencies
```

## Tool Development
When implementing new tools:

1. Define the tool struct and interface implementation in `pkg/tools/[toolname]/[toolname].go`
2. Follow the Tool interface defined in [pkg/tools/tool.go](mdc:pkg/tools/tool.go)
3. Include comprehensive tests and benchmarks
4. Example: [pkg/tools/io/io.go](mdc:pkg/tools/io/io.go)

## Testing Guidelines
- Write unit tests for all new functionality
- Include benchmarks for performance-critical operations
- Use table-driven tests where appropriate
- Example: [pkg/tools/io/io_test.go](mdc:pkg/tools/io/io_test.go)

## Code Organization
- Keep tool implementations modular and focused
- Follow Go best practices and idioms
- Use meaningful package names and file structure
- Example: [pkg/tools/math/math.go](mdc:pkg/tools/math/math.go)
